<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<Configuration status="ERROR" monitorInterval="1800">
    <Properties>
        <Property name="logPath">d://mylogs</Property>
    </Properties>
    <!--先定义所有的appender -->
    <Appenders>
        <!--设置在控制台打印日志 -->
        <Console name="CONSOLE" target="SYSTEM_OUT">
            <PatternLayout pattern="[%d{YYYY-MM-dd HH:mm:ss}]: [%p][%t] %c:%L - %msg%n"/>
        </Console>
        <!--设置级别为INFO日志输出到.log中 -->
        <RollingFile name="INFO" filename="${logPath}/baseframe-info.log"
                     filepattern="${logPath}/baseframe-info-%d{YYYYMMdd}-%i.log.zip">
            <Filters>
                <!--设置只输出级别为INFO的日志 -->
                <ThresholdFilter level="INFO"/>
                <ThresholdFilter level="WARN" onMatch="DENY"
                                 onMismatch="NEUTRAL"/>
            </Filters>
            <PatternLayout pattern="[%d{YYYY-MM-dd HH:mm:ss}]:[%p][%t] %c:%L - %msg%n"/>
            <Policies>
                <!--设置每天打包日志一次 -->
                <TimeBasedTriggeringPolicy interval="1"
                                           modulate="true"/>
                <!--设置日志文件满1MB后打包 -->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <DefaultRolloverStrategy fileIndex="max" max="7">
                <!-- 删除指定目录下7天之前的日志 -->
                <Delete basePath="${logPath}" maxDepth="7">
                    <IfFileName glob="baseframe-info-*.log.zip"/>
                    <IfLastModified age="7d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
        <!--设置级别为DEBUG日志输出到.log中 -->
        <RollingFile name="DEBUG" filename="${logPath}/baseframe-debug.log"
                     filepattern="${logPath}/baseframe-debug-%d{YYYYMMdd}-%i.log.zip">
            <Filters>
                <!--设置只输出级别为DEBUG的日志 -->
                <ThresholdFilter level="DEBUG"/>
                <ThresholdFilter level="INFO" onMatch="DENY"
                                 onMismatch="NEUTRAL"/>
            </Filters>
            <PatternLayout pattern="[%d{YYYY-MM-dd HH:mm:ss}]:[ %p][%t] %c:%L - %msg%n"/>
            <Policies>
                <!--设置每天打包日志一次 -->
                <TimeBasedTriggeringPolicy interval="1"
                                           modulate="true"/>
                <!--设置日志文件满1MB后打包 -->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <DefaultRolloverStrategy fileIndex="max" max="7">
                <!-- 删除指定目录下7天之前的日志 -->
                <Delete basePath="${logPath}" maxDepth="7">
                    <IfFileName glob="baseframe-debug-*.log.zip"/>
                    <IfLastModified age="7d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--设置级别为ERROR日志输出到.log中 -->
        <RollingFile name="ERROR" filename="${logPath}/baseframe-error.log"
                     filepattern="${logPath}/baseframe-error-%d{YYYYMMdd}-%i.log.zip">
            <!--设置只输出级别为ERROR的日志 -->
            <ThresholdFilter level="ERROR"/>
            <ThresholdFilter level="FATAL" onMatch="DENY"
                             onMismatch="NEUTRAL"/>
            <PatternLayout pattern="[%d{YYYY-MM-dd HH:mm:ss}]:[ %p][%t] %c:%L - %msg%n"/>
            <Policies>
                <!--设置每天打包日志一次 -->
                <TimeBasedTriggeringPolicy interval="1"
                                           modulate="true"/>
                <!--设置日志文件满1MB后打包 -->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <DefaultRolloverStrategy fileIndex="max" max="7">
                <!-- 删除指定目录下7天之前的日志 -->
                <Delete basePath="${logPath}" maxDepth="7">
                    <IfFileName glob="baseframe-error-*.log.zip"/>
                    <IfLastModified age="7d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
    </Appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
        <!--<logger name="org.springframework" level="INFO" additivity="false"></logger>-->
        <!--<logger name="org.mybatis" level="INFO" additivity="true"></logger>-->
        <!-- druid配置 -->
        <logger name="druid.sql.Statement" level="debug" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>
        <logger name="druid.sql.ResultSet" level="debug" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="INFO"/>
            <appender-ref ref="DEBUG"/>
            <appender-ref ref="ERROR"/>
        </root>
    </loggers>
</Configuration>